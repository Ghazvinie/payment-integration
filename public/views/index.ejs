<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Integration</title>
    <link rel="stylesheet" href="/styles/styles.css">
</head>

<body>
    <h1 style="text-align: center;">
        <% if (locals.message !=undefined) { %>
            <%= message %>
                <% } else { %>
                    Buy Something
                    <% } %>
    </h1>

    <hr>
    <div class="container">
        <div class="form-container">
            <form class="buy-item">
                <h2>Buy Me</h2>
                <h3>£10.00</h3>
                <br />
                Quantity:
                <input type="number" name="Buy Me" value="1" min="1" max="10" style="width: 50px;"
                    class="input-value" />
                <input type="submit" value="Add To Basket" />
                <br />
            </form>

            <form class="buy-item">
                <h2>Get Me</h2>
                <h3>£15.00</h3>
                <br />
                Quantity:
                <input type="number" name="Get Me" value="1" min="1" max="10" style="width: 50px;"
                    class="input-value" />
                <input type="submit" value="Add To Basket" />
                <br />
            </form>

            <form class="buy-item">
                <h2>Want Me</h2>
                <h3>£20.00</h3>
                <br />
                Quantity:
                <input type="number" name="Want Me" value="1" min="1" max="10" style="width: 50px;"
                    class="input-value" />
                <input type="submit" value="Add To Basket" />
                <br />
            </form>
        </div>
        <div class="basket-container">
            <form>
                <div id="basket-table-container">
                    <h2>Shopping Basket</h2>
                    <table id="basket-table">
                        <tr>
                            <th>Item:</th>
                            <th>Quantity:</th>
                            <th>Price:</th>
                        </tr>
                    </table>

                    <div class="totals">
                        <h4 class="sub-total totals"></h4>
                        <form>
                            <h4 class="delivery-price totals">Delivery: £2.50</h4>
                            <select id="delivery" required>
                                <option value="2.50">Standard - £2.50</option>
                                <option value="6.99">Express - £6.99</option>
                            </select>
                        </form>

                        <h3 class="total totals"></h3>
                    </div>
                    <div class="basket-buttons-container">
                        <input type="button" value="Checkout" id="checkout" class="basket-buttons"> <br> <br>
                        <input type="button" value="Clear" class="basket-buttons" onclick="empty()">
                    </div>
                </div>

            </form>

        </div>

    </div>

    <script>
        const quantities = document.querySelectorAll('.input-value'); // Quantity fields
        quantities.forEach(input => input.value = 1); // Reset quantities
        const buyItem = document.querySelectorAll('.buy-item'); // Purchase form
        const basketTable = document.getElementById('basket-table'); // Basket table
        const delivery = document.getElementById('delivery'); // Delivery charges
        const checkout = document.getElementById('checkout'); // Checkout button
        const subTotalText = document.querySelector('.sub-total') // Sub-total text
        const totalText = document.querySelector('.total')  // Total text

        let deliverySelection = 2.50; // Default delivery selection is standard, £2.50
        let subTotal = 0;   // Set subtotal
        let basket = {}; // Create empty basket object

        // Update delivery price display and total
        delivery.addEventListener('change', function (e) {
            deliverySelection = parseFloat(this.selectedOptions[0].value);
            document.querySelector('.delivery-price').innerText = `Delivery: £${deliverySelection.toFixed(2)}`;
            document.querySelector('.total').innerHTML = `<h3>Total: £${(subTotal + deliverySelection).toFixed(2)}</h3>`;

        });

        // Functionality for adding each item to the basket
        buyItem.forEach(btn => btn.addEventListener('submit', function (e) {
            e.preventDefault();

            // Reset subtotal to zero
            subTotal = 0;

            // Object to store prices of items
            const prices = { 'Buy Me': 10, 'Get Me': 15, 'Want Me': 20 };

            // Get form data
            const getForm = new FormData(this);
            // Convert form to usable object
            const itemObject = Object.fromEntries(getForm);

            // Get item and quantity key/values
            const item = Object.keys(itemObject);
            const quantity = parseInt(Object.values(itemObject));

            if (quantity <= 0 || quantity > 10) { // Make sure user can't add less than one item or more than ten
                return;
            } else {
                // If basket object does not have item, add item to object with quantity, or update item's quantity
                basket[item] === undefined ? basket[item] = { quantity } : basket[item].quantity += quantity;
                // Set total price 
                basket[item].total = prices[item] * basket[item].quantity;
                basket[item].price = prices[item]
            }


            // Convert basket object to array to be mapped over, create html based on item and quantity
            const html = Object.entries(basket).map(element => {

                // Whilst mapping, can also calculate sub-total
                subTotal += element[1].quantity * element[1].price;

                return `<tr><td>${element[0]}</td><td>${element[1].quantity}</td><td>£${element[1].total}</td></tr>`
            }).join('');

            // Set basket html
            basketTable.innerHTML = `<tr><th>Item:</th><th>Quantity:</th><th>Price:</th></tr>` + html; // Update basket table html

            // Update totals
            subTotalText.innerText = `Sub-total: £${subTotal.toFixed(2)}`;
            totalText.innerText = `Total: £${(subTotal + deliverySelection).toFixed(2)}`;

            // Reset quantities to 1
            quantities.forEach(input => input.value = 1);
            return;
        })
        );

        checkout.addEventListener('click', async (e) => {
            e.preventDefault();
            // Check basket is not empty
            if (Object.entries(basket).length === 0) {
                alert('Basket is empty');
                return;
            }
            try {
                basket.delivery = deliverySelection;
                basket.subTotal = subTotal;
                // POST basket to checkout
                const response = await fetch('/purchase/checkout', {
                    method: 'post',
                    body: JSON.stringify(basket),
                    headers: { 'Content-Type': 'application/json' }
                });
                const data = await response.json();
                if (response.status === 200) {
                    window.location = data.redirect;
                }
            } catch (err) {
                console.log(err)
            }
        });

        // Clear basket object, basket html and basket totals
        function empty() {
            basket = {};
            basketTable.innerHTML = `<tr><th>Item:</th><th>Quantity:</th></th><th>Price:</th></tr>`;
            subTotalText.innerHTML = ``;
            totalText.innerText = ``;
            subTotal = 0;
            return;
        }
    </script>
</body>

</html>